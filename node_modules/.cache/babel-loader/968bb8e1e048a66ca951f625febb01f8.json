{"ast":null,"code":"import axios from \"axios\";\nimport { _store } from \"../index\";\nimport { API_URL } from \"../config\";\n\nconst debugData = data => {\n  // _store.dispatch(fetchingServer(false));\n  return Promise.resolve(data);\n};\n\nconst debugError = er => {\n  // _store.dispatch(fetchingServer(false));\n  if (er.response && er.response.statusText === 'Unauthorized') window.location.replace(\"/login\");\n  return Promise.reject(er);\n};\n\nconst request = () => {\n  const token = _store.getState().session.userAuth.token;\n\n  const axiosApi = axios.create({\n    baseURL: API_URL,\n    headers: {\n      Authorization: \"Token=\".concat(token)\n    }\n  }); // _store.dispatch(fetchingServer(true));\n\n  return {\n    get(url, options = {}) {\n      return axiosApi.get(url).then(debugData).catch(debugError);\n    },\n\n    post(url, data, options = {}) {\n      return axiosApi.post(url, data).then(debugData).catch(debugError);\n    },\n\n    put(url, data, options = {}) {\n      return axiosApi.put(url, data).then(debugData).catch(debugError);\n    },\n\n    delete(url, options = {}) {\n      return axiosApi.delete(url).then(debugData).catch(debugError);\n    }\n\n  };\n};\n\nexport default request;","map":{"version":3,"sources":["/Volumes/DD_Drive/works_Dev/React_works/ZooTown/ZooTown_FrontEnd/src/api/request.js"],"names":["axios","_store","API_URL","debugData","data","Promise","resolve","debugError","er","response","statusText","window","location","replace","reject","request","token","getState","session","userAuth","axiosApi","create","baseURL","headers","Authorization","get","url","options","then","catch","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAEA,MAAMC,SAAS,GAAGC,IAAI,IAAI;AACtB;AACA,SAAOC,OAAO,CAACC,OAAR,CAAgBF,IAAhB,CAAP;AACH,CAHD;;AAKA,MAAMG,UAAU,GAAGC,EAAE,IAAI;AACrB;AACA,MAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,UAAZ,KAA2B,cAA9C,EAA8DC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,QAAxB;AAC9D,SAAOR,OAAO,CAACS,MAAR,CAAeN,EAAf,CAAP;AACH,CAJD;;AAMA,MAAMO,OAAO,GAAG,MAAM;AAClB,QAAMC,KAAK,GAAGf,MAAM,CAACgB,QAAP,GAAkBC,OAAlB,CAA0BC,QAA1B,CAAmCH,KAAjD;;AAGA,QAAMI,QAAQ,GAAGpB,KAAK,CAACqB,MAAN,CAAa;AAC1BC,IAAAA,OAAO,EAAEpB,OADiB;AAE1BqB,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,kBAAWR,KAAX;AADR;AAFiB,GAAb,CAAjB,CAJkB,CAWlB;;AAEA,SAAO;AACHS,IAAAA,GAAG,CAACC,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoB;AACnB,aAAOP,QAAQ,CAACK,GAAT,CAAaC,GAAb,EAAkBE,IAAlB,CAAuBzB,SAAvB,EAAkC0B,KAAlC,CAAwCtB,UAAxC,CAAP;AACH,KAHE;;AAIHuB,IAAAA,IAAI,CAACJ,GAAD,EAAMtB,IAAN,EAAYuB,OAAO,GAAG,EAAtB,EAA0B;AAC1B,aAAOP,QAAQ,CAACU,IAAT,CAAcJ,GAAd,EAAmBtB,IAAnB,EAAyBwB,IAAzB,CAA8BzB,SAA9B,EAAyC0B,KAAzC,CAA+CtB,UAA/C,CAAP;AACH,KANE;;AAOHwB,IAAAA,GAAG,CAACL,GAAD,EAAMtB,IAAN,EAAYuB,OAAO,GAAG,EAAtB,EAA0B;AACzB,aAAOP,QAAQ,CAACW,GAAT,CAAaL,GAAb,EAAkBtB,IAAlB,EAAwBwB,IAAxB,CAA6BzB,SAA7B,EAAwC0B,KAAxC,CAA8CtB,UAA9C,CAAP;AACH,KATE;;AAUHyB,IAAAA,MAAM,CAACN,GAAD,EAAMC,OAAO,GAAG,EAAhB,EAAoB;AACtB,aAAOP,QAAQ,CAACY,MAAT,CAAgBN,GAAhB,EAAqBE,IAArB,CAA0BzB,SAA1B,EAAqC0B,KAArC,CAA2CtB,UAA3C,CAAP;AACH;;AAZE,GAAP;AAcH,CA3BD;;AA8BA,eAAeQ,OAAf","sourcesContent":["import axios from \"axios\";\r\nimport { _store } from \"../index\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst debugData = data => {\r\n    // _store.dispatch(fetchingServer(false));\r\n    return Promise.resolve(data);\r\n}\r\n\r\nconst debugError = er => {\r\n    // _store.dispatch(fetchingServer(false));\r\n    if (er.response && er.response.statusText === 'Unauthorized') window.location.replace(\"/login\");\r\n    return Promise.reject(er);\r\n}\r\n\r\nconst request = () => {\r\n    const token = _store.getState().session.userAuth.token;\r\n\r\n\r\n    const axiosApi = axios.create({\r\n        baseURL: API_URL,\r\n        headers: {\r\n            Authorization: `Token=${token}`\r\n        }\r\n    });\r\n\r\n    // _store.dispatch(fetchingServer(true));\r\n\r\n    return {\r\n        get(url, options = {}) {\r\n            return axiosApi.get(url).then(debugData).catch(debugError)\r\n        },\r\n        post(url, data, options = {}) {\r\n            return axiosApi.post(url, data).then(debugData).catch(debugError)\r\n        },\r\n        put(url, data, options = {}) {\r\n            return axiosApi.put(url, data).then(debugData).catch(debugError)\r\n        },\r\n        delete(url, options = {}) {\r\n            return axiosApi.delete(url).then(debugData).catch(debugError)\r\n        },\r\n    }\r\n}\r\n\r\n\r\nexport default request;"]},"metadata":{},"sourceType":"module"}