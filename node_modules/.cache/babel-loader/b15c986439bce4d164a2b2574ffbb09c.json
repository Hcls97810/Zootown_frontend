{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport config from \"./config\";\nconst persistConfig = {\n  key: config.KEY_PERSIST_STORE,\n  storage,\n  blacklist: ['session'],\n  whitelist: []\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport default (() => {\n  let store = createStore(persistedReducer, composeEnhancer(applyMiddleware(thunk)) // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  // applyMiddleware(thunk),\n  );\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});","map":{"version":3,"sources":["/Volumes/DD_Drive/works_Dev/React_works/ZooTown/ZooTown_FrontEnd/src/store.js"],"names":["createStore","compose","applyMiddleware","persistStore","persistReducer","storage","thunk","rootReducer","config","persistConfig","key","KEY_PERSIST_STORE","blacklist","whitelist","persistedReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAGA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAEF,MAAM,CAACG,iBADM;AAElBN,EAAAA,OAFkB;AAGlBO,EAAAA,SAAS,EAAE,CAAC,SAAD,CAHO;AAIlBC,EAAAA,SAAS,EAAE;AAJO,CAAtB;AAOA,MAAMC,gBAAgB,GAAGV,cAAc,CAACK,aAAD,EAAgBF,WAAhB,CAAvC;AACA,MAAMQ,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+ChB,OAAvE;AAEA,gBAAe,MAAM;AACjB,MAAIiB,KAAK,GAAGlB,WAAW,CACnBc,gBADmB,EAEnBC,eAAe,CAACb,eAAe,CAACI,KAAD,CAAhB,CAFI,CAGnB;AACA;AAJmB,GAAvB;AAMA,MAAIa,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP;AACH,CATD","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\nimport config from \"./config\";\r\n\r\n\r\nconst persistConfig = {\r\n    key: config.KEY_PERSIST_STORE,\r\n    storage,\r\n    blacklist: ['session'],\r\n    whitelist: [],\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    let store = createStore(\r\n        persistedReducer,\r\n        composeEnhancer(applyMiddleware(thunk)),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n        // applyMiddleware(thunk),\r\n    )\r\n    let persistor = persistStore(store)\r\n    return { store, persistor }\r\n}"]},"metadata":{},"sourceType":"module"}