{"ast":null,"code":"var _jsxFileName = \"/Volumes/DD_Drive/works_Dev/React_works/ZooTown/ZooTown_FrontEnd/src/components/UI/modal/Modal.js\";\nimport React from 'react';\nimport { Modal as AntdModal } from 'antd';\nimport { connect } from 'react-redux';\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setModal1Visible = modal1Visible => {\n      if (modal1Visible) this.props.dispatch({\n        type: 'CHANGE_MODAL',\n        className: this.props.className\n      });\n      this.setState({\n        modal1Visible\n      });\n    };\n\n    this.state = {\n      modal1Visible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.isKeepShow || props.isKeepShow) {} else if (props.currentModal !== this.props.className) this.setState({\n      modal1Visible: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      type: \"primary\",\n      onClick: () => this.setModal1Visible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.props.children), React.createElement(AntdModal, {\n      title: this.props.title,\n      style: {\n        top: this.props.top || 100,\n        width: this.props.width || 900\n      },\n      visible: this.state.modal1Visible,\n      onOk: () => this.setModal1Visible(false),\n      onCancel: () => this.setModal1Visible(false),\n      footer: [null, null],\n      className: \"Modal \".concat(this.props.className),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.content));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentModal: state.common.currentModal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);","map":{"version":3,"sources":["/Volumes/DD_Drive/works_Dev/React_works/ZooTown/ZooTown_FrontEnd/src/components/UI/modal/Modal.js"],"names":["React","Modal","AntdModal","connect","Component","constructor","props","setModal1Visible","modal1Visible","dispatch","type","className","setState","state","componentWillReceiveProps","isKeepShow","currentModal","render","children","title","top","width","content","mapStateToProps","common","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,MAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMF,KAAN,SAAoBD,KAAK,CAACI,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,gBAPmB,GAOAC,aAAa,IAAI;AAClC,UAAIA,aAAJ,EAAmB,KAAKF,KAAL,CAAWG,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,SAAS,EAAE,KAAKL,KAAL,CAAWK;AAA9C,OAApB;AACnB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD,KAVkB;;AAEjB,SAAKK,KAAL,GAAa;AACXL,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAODM,EAAAA,yBAAyB,CAACR,KAAD,EAAQ;AAC/B,QAAI,KAAKA,KAAL,CAAWS,UAAX,IAAyBT,KAAK,CAACS,UAAnC,EAA+C,CAC9C,CADD,MACO,IAAIT,KAAK,CAACU,YAAN,KAAuB,KAAKV,KAAL,CAAWK,SAAtC,EAAiD,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,aAAa,EAAE;AAAjB,KAAd;AACzD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,OAAO,EAAE,MAAM,KAAKV,gBAAL,CAAsB,IAAtB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWY,QADd,CADF,EAIE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWa,KADpB;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAE,KAAKd,KAAL,CAAWc,GAAX,IAAkB,GAAzB;AAA8BC,QAAAA,KAAK,EAAE,KAAKf,KAAL,CAAWe,KAAX,IAAoB;AAAzD,OAFT;AAGE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWL,aAHtB;AAIE,MAAA,IAAI,EAAE,MAAM,KAAKD,gBAAL,CAAsB,KAAtB,CAJd;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKA,gBAAL,CAAsB,KAAtB,CALlB;AAME,MAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,CANV;AAOE,MAAA,SAAS,kBAAW,KAAKD,KAAL,CAAWK,SAAtB,CAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKL,KAAL,CAAWgB,OATd,CAJF,CADF;AAkBD;;AArCiC;;AAuCpC,MAAMC,eAAe,GAAGV,KAAK,IAAI;AAC/B,SAAO;AACLG,IAAAA,YAAY,EAAEH,KAAK,CAACW,MAAN,CAAaR;AADtB,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGhB,QAAQ,IAAI;AACrC,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAKA,eAAeN,OAAO,CACpBoB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbxB,KAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport { Modal as AntdModal } from 'antd';\r\nimport { connect } from 'react-redux';\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal1Visible: false\r\n    };\r\n  }\r\n\r\n  setModal1Visible = modal1Visible => {\r\n    if (modal1Visible) this.props.dispatch({ type: 'CHANGE_MODAL', className: this.props.className });\r\n    this.setState({ modal1Visible });\r\n  };\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (this.props.isKeepShow || props.isKeepShow) {\r\n    } else if (props.currentModal !== this.props.className) this.setState({ modal1Visible: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <span type=\"primary\" onClick={() => this.setModal1Visible(true)}>\r\n          {this.props.children}\r\n        </span>\r\n        <AntdModal\r\n          title={this.props.title}\r\n          style={{ top: this.props.top || 100, width: this.props.width || 900 }}\r\n          visible={this.state.modal1Visible}\r\n          onOk={() => this.setModal1Visible(false)}\r\n          onCancel={() => this.setModal1Visible(false)}\r\n          footer={[null, null]}\r\n          className={`Modal ${this.props.className}`}\r\n        >\r\n          {this.props.content}\r\n        </AntdModal>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentModal: state.common.currentModal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatch\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Modal);\r\n"]},"metadata":{},"sourceType":"module"}